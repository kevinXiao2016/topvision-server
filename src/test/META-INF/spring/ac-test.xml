<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">

    <!-- ========================= GENERAL DEFINITIONS ========================= -->
    <!-- Configurer that replaces ${...} placeholders with values from properties
         files -->
    <!-- (in this case, mail and JDBC related properties) -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>file:///E:/workspace/topvision-server/webapp/WEB-INF/conf/*.properties</value>
            </list>
        </property>
    </bean>

    <!-- ========================= RESOURCE DEFINITIONS ========================= -->

    <!-- The placeholders are resolved from jdbc.properties through -->
    <!-- Local Apache Commons DBCP DataSource that refers to a combined database -->
    <!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
         destroy-method="close"> <property name="driverClassName" value="${jdbc.driverClassName}"
         /> <property name="url" value="${jdbc.url}" /> <property name="username"
         value="${jdbc.username}" /> <property name="password" value="${jdbc.password}"
         /> <property name="initialSize" value="${dataSource.initialSize}" /> <property
         name="maxIdle" value="${dataSource.maxIdle}" /> <property name="minIdle"
         value="${dataSource.minIdle}" /> <property name="maxActive" value="${dataSource.maxActive}"
         /> </bean> -->
    <!-- Local C3p0 DataSource that refers to a combined database -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <property name="autoCommitOnClose" value="true"/>
        <property name="checkoutTimeout" value="${cpool.checkoutTimeout}"/>
        <property name="initialPoolSize" value="${cpool.initialPoolSize}"/>
        <property name="minPoolSize" value="${cpool.minPoolSize}"/>
        <property name="maxPoolSize" value="${cpool.maxPoolSize}"/>
        <property name="maxIdleTime" value="${cpool.maxIdleTime}"/>
        <property name="acquireIncrement" value="${cpool.acquireIncrement}"/>
        <property name="maxIdleTimeExcessConnections" value="${cpool.maxIdleTimeExcessConnections}"/>
    </bean>

    <!-- jndi datesource -->
    <!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
         <property name="jndiName"> <value>java:comp/env/jdbc/TopvisionDB</value>
         </property> </bean> -->

    <!--SqlMap setup for iBATIS Database Layer -->
    <bean id="jdbcAccessor"
          class="com.topvision.framework.dao.ibatis.SqlMapClientFactoryBean">
        <property name="databaseType" value="${database.type}"/>
        <property name="configLocation">
            <value>
                classpath:META-INF/spring/sqlMapConfig-${database.type}.xml
            </value>
        </property>
        <property name="configLocations">
            <list>
                <value>
                    classpath*:/com/topvision/**/sqlMapConfig-*.xml
                </value>
            </list>
        </property>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--bean id="jdbcAccessor" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
         <property name="dataSource" ref="dataSource"/> <property name="hibernateProperties">
         <props> <prop key="hibernate.dialect">${hibernate.dialect}</prop> <prop key="hibernate.show_sql">true</prop>
         </props> </property> <property name="mappingLocations"> <list><value> classpath:/com/topvision/ems/server/**/dao/hibernate/maps/${database.type}/*.hbm.xml
         </value></list> </property> </bean -->

    <!-- Transaction manager for a single JDBC DataSource -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
         <property name="sessionFactory"> <ref bean="jdbcAccessor" /> </property>
         </bean> -->
    <!-- Transaction manager that delegates to JTA (for a transactional JNDI
         DataSource) -->
    <!-- <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager"/> -->

    <!-- <bean id="baseTransactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
         abstract="true"> <property name="transactionManager" ref="transactionManager"
         /> <property name="transactionAttributes"> <props> <prop key="*">PROPAGATION_REQUIRED</prop>
         <prop key="insert*">PROPAGATION_REQUIRED</prop> <prop key="save">PROPAGATION_REQUIRED</prop>
         <prop key="update*">PROPAGATION_REQUIRED</prop> <prop key="edit*">PROPAGATION_REQUIRED</prop>
         <prop key="del*">PROPAGATION_REQUIRED</prop> <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
         <prop key="query*">PROPAGATION_REQUIRED,readOnly</prop> <prop key="disPlay*">PROPAGATION_REQUIRES_NEW</prop>
         </props> </property> </bean> -->

    <!-- ========================= ASPECT CONFIGURATION ======================== -->
    <!-- Transaction advice definition, based on method name patterns. Defaults
         to PROPAGATION_REQUIRED for all methods whose name starts with "tx" or "trans*",
         and to PROPAGATION_REQUIRED with read-only hint for all other methods. -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="SUPPORTS"/>
            <tx:method name="create*" propagation="SUPPORTS"/>
            <tx:method name="insert*" propagation="SUPPORTS"/>
            <tx:method name="save*" propagation="SUPPORTS"/>
            <tx:method name="modify*" propagation="SUPPORTS"/>
            <tx:method name="update*" propagation="SUPPORTS"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="remove*" propagation="REQUIRED"/>
            <tx:method name="tx*" propagation="REQUIRED"/>
            <tx:method name="trans*" propagation="REQUIRED"/>
            <tx:method name="*" propagation="NOT_SUPPORTED" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!-- This definition creates auto-proxy infrastructure based on the given
         pointcut, expressed in AspectJ pointcut language. Here: applying the advice
         named "txAdvice" to all methods on classes named *Service*. -->
    <aop:config>
        <aop:advisor pointcut="execution(* com.topvision..service.*Service.*(..))"
                     advice-ref="txAdvice"/>
    </aop:config>
</beans>
