<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.topvision.ems.cmc.alert.domain.CmcAlert"><!--  	<typeAlias alias="alert" type="com.topvision.ems.fault.domain.Alert" />	<typeAlias alias="alertType" type="com.topvision.ems.fault.domain.AlertType" />	<typeAlias alias="historyAlert" type="com.topvision.ems.fault.domain.HistoryAlert" />	<typeAlias alias="docsDevEvControl" type="com.topvision.ems.cmc.facade.domain.DocsDevEvControl"/>-->		<!-- ################################## select start ####################################### -->	<select id="getCmcMacByCmcIndexAndEntityId" parameterType="map"	resultType="string">	select mac from entity where entityId in(select cmcId from	cmcentityrelation where cmcIndex=#{cmcIndex} and cmcEntityId=#{entityId})	</select>	<select id="selectCmPollAlertType" resultType="com.topvision.ems.fault.domain.AlertType">	select * from alerttype where typeId in('-501', '-502', '-503', '-504', '-505', '-506', '-507', '-508', '-509', '-510')	</select>	<select id="getCmcMacByCmcId" parameterType="long" resultType="long">        select topCcmtsSysMacAddrLong from cmcattribute where cmcId = #{cmcId}    </select>    <!--Modify by Rod -->    <select id="getCmcAlertList" parameterType="map" resultType="com.topvision.ems.fault.domain.Alert">    SELECT A.alertId, A.typeId, A.name, A.levelId, C.name as    levelName,    A.monitorId, A.entityId, A.host, A.source, A.message,    A.firstTime,    A.lastTime, A.happenTimes, A.confirmUser,    A.confirmTime,    A.confirmMessage,     A.clearUser, A.clearTime, A.clearMessage,    A.status, A.orginalCode,    B.displayName AS typeName FROM    Alert A, AlertType B, Levels C    WHERE A.typeId = B.typeId AND A.levelId =    C.levelId AND A.entityId = #{cmcId}         <if test="typeId != null">            <!-- AND A.typeId = #{typeId} -->            and FIND_IN_SET(A.typeId,topoEventFun(#{typeId},'alerttype'))        </if>        <if test="levelId != null">            AND A.levelId = #{levelId}        </if>        <if test="message != null">            AND A.message like '%${message}%'        </if>        <if test="startTime != null">            AND <![CDATA[ A.firstTime >= #{startTime} ]]>        </if>        <if test="endTime != null">            AND <![CDATA[A.firstTime <= #{endTime}]]>        </if>        <if test="alertId != null">        	and A.alertId = #{alertId}        </if>    order by firstTime desc    </select>    <select id="getCmcAlertListNum" parameterType="map" resultType="int">    SELECT COUNT(A.alertId)    FROM Alert A, AlertType B, Levels C    WHERE    A.typeId = B.typeId AND A.levelId = C.levelId AND     A.entityId = #{cmcId}        <if test="typeId != null">           <!--  AND A.typeId = #{typeId} -->           and FIND_IN_SET(A.typeId,topoEventFun(#{typeId},'alerttype'))        </if>        <if test="levelId != null">            AND A.levelId = #{levelId}        </if>        <if test="message != null">            AND A.message like '%${message}%'        </if>        <if test="startTime != null">            AND <![CDATA[ A.firstTime >= #{startTime} ]]>        </if>        <if test="endTime != null">            AND <![CDATA[A.firstTime <= #{endTime}]]>        </if>        <if test="alertId != null">        	and A.alertId = #{alertId}        </if>    </select>    <select id="getCmcHistoryAlertList" parameterType="map" resultType="com.topvision.ems.fault.domain.HistoryAlert">    SELECT A.alertId, A.typeId, A.name, A.levelId, C.name as    levelName,    A.monitorId, A.entityId, A.host, A.source, A.message,    A.firstTime,    A.lastTime, A.happenTimes, A.confirmUser,    A.confirmTime,    A.confirmMessage, A.status, A.clearUser, A.clearTime, A.clearMessage,    B.displayName AS typeName FROM HistoryAlert A, AlertType    B, Levels C    WHERE A.typeId = B.typeId AND A.levelId = C.levelId AND    A.entityId = #{cmcId}        <if test="typeId != null">           <!--  AND A.typeId = #{typeId} -->           and FIND_IN_SET(A.typeId,topoEventFun(#{typeId},'alerttype'))        </if>        <if test="levelId != null">            AND A.levelId = #{levelId}        </if>        <if test="message != null">            AND A.message like '%${message}%'        </if>        <if test="startTime != null">            AND <![CDATA[ A.firstTime >= #{startTime} ]]>        </if>        <if test="endTime != null">            AND <![CDATA[A.firstTime <= #{endTime}]]>        </if>    order by firstTime desc    </select>    <select id="getCmcHistoryAlertListNum" parameterType="map" resultType="int">    SELECT count(A.alertId) FROM HistoryAlert A, AlertType B, Levels C    WHERE A.typeId = B.typeId AND A.levelId = C.levelId AND    A.entityId = #{cmcId}        <if test="typeId != null">            <!-- AND A.typeId = #{typeId} -->            and FIND_IN_SET(A.typeId,topoEventFun(#{typeId},'alerttype'))        </if>        <if test="levelId != null">            AND A.levelId = #{levelId}        </if>        <if test="message != null">            AND A.message like '%${message}%'        </if>        <if test="startTime != null">            AND <![CDATA[ A.firstTime >= #{startTime} ]]>        </if>        <if test="endTime != null">            AND <![CDATA[A.firstTime <= #{endTime}]]>        </if>    </select>    <select id="getDevEvControlList" parameterType="long"        resultType="docsDevEvControl">        select entityId,               docsDevEvPriority AS docsDevEvPriority,               docsDevEvReporting AS docsDevEvReporting        from devevcontrol        where entityId = #{entityId}    </select>    <!--add by loyal -->    <select id="selectCurrentCmPollAlertList" parameterType="map" resultType="com.topvision.ems.fault.domain.Alert">    SELECT A.alertId, A.typeId, A.name, A.levelId, C.name as    levelName,    A.monitorId, A.entityId, A.host, A.source, A.message,    A.firstTime,    A.lastTime, A.happenTimes, A.confirmUser,    A.confirmTime,    A.confirmMessage, A.status, A.orginalCode,    B.displayName AS typeName FROM    Alert A, AlertType B, Levels C    WHERE A.typeId  in('-501', '-502', '-503', '-504', '-505', '-506', '-507', '-508', '-509', '-510')    and A.typeId = B.typeId AND A.levelId = C.levelId         <if test="typeId != null">            AND A.typeId = #{typeId}        </if>        <if test="levelId != null">            AND A.levelId = #{levelId}        </if>        <if test="host != null">            AND A.source like '%${host}%'        </if><if test="startTime != null">            AND <![CDATA[ A.firstTime >= #{startTime} ]]>        </if>        <if test="endTime != null">            AND <![CDATA[A.firstTime <= #{endTime}]]>        </if>    order by firstTime desc    </select>    <select id="selectCurrentCmPollAlertNum" parameterType="map" resultType="int">    SELECT COUNT(A.alertId)    FROM Alert A, AlertType B, Levels C    WHERE A.typeId  in('-501', '-502', '-503', '-504', '-505', '-506', '-507', '-508', '-509', '-510')    and A.typeId = B.typeId AND A.levelId = C.levelId         <if test="typeId != null">            AND A.typeId = #{typeId}        </if>        <if test="levelId != null">            AND A.levelId = #{levelId}        </if>        <if test="host != null">            AND A.source like '%${host}%'        </if>        <if test="startTime != null">            AND <![CDATA[ A.firstTime >= #{startTime} ]]>        </if>        <if test="endTime != null">            AND <![CDATA[A.firstTime <= #{endTime}]]>        </if>    </select>    <select id="selectHisCmPollAlertList" parameterType="map" resultType="com.topvision.ems.fault.domain.HistoryAlert">    SELECT A.alertId, A.typeId, A.name, A.levelId, C.name as    levelName,    A.monitorId, A.entityId, A.host, A.source, A.message,    A.firstTime,    A.lastTime, A.happenTimes, A.confirmUser,    A.confirmTime,    A.confirmMessage, A.status, A.clearUser, A.clearTime, A.clearMessage,    B.displayName AS typeName FROM HistoryAlert A, AlertType    B, Levels C    WHERE A.typeId  in('-501', '-502', '-503', '-504', '-505', '-506', '-507', '-508', '-509', '-510')    and A.typeId = B.typeId AND A.levelId = C.levelId         <if test="typeId != null">            AND A.typeId = #{typeId}        </if>        <if test="levelId != null">            AND A.levelId = #{levelId}        </if>        <if test="host != null">            AND A.source like '%${host}%'        </if>        <if test="startTime != null">            AND <![CDATA[ A.firstTime >= #{startTime} ]]>        </if>        <if test="endTime != null">            AND <![CDATA[A.firstTime <= #{endTime}]]>        </if>    order by firstTime desc    </select>    <select id="selectHisCmPollAlertListNum" parameterType="map" resultType="int">    SELECT count(A.alertId) FROM HistoryAlert A, AlertType B, Levels C    WHERE A.typeId  in('-501', '-502', '-503', '-504', '-505', '-506', '-507', '-508', '-509', '-510')    and A.typeId = B.typeId AND A.levelId = C.levelId         <if test="typeId != null">            AND A.typeId = #{typeId}        </if>        <if test="levelId != null">            AND A.levelId = #{levelId}        </if>        <if test="host != null">            AND A.source like '%${host}%'        </if>        <if test="startTime != null">            AND <![CDATA[ A.firstTime >= #{startTime} ]]>        </if>        <if test="endTime != null">            AND <![CDATA[A.firstTime <= #{endTime}]]>        </if>        </select>	<!-- ################################## select end ######################################### -->		<!-- ################################## insert start ####################################### -->	<!-- ################################## insert end ######################################### -->		<!-- ################################## update start ####################################### -->	<!-- ################################## update end ######################################### -->		<!-- ################################## delete start ####################################### -->	<!-- ################################## delete end ######################################### --></mapper>