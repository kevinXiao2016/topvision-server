<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.topvision.ems.cmc.qos.domain.CmcQos"> 	<!-- ################################## select start ####################################### -->	<select id="getServiceFlowIdListByCmcId" parameterType="Long"		resultType="Long">		SELECT		docsQosServiceFlowId		FROM		serviceflowattribute		WHERE cmcId	= #{cmcId}	</select>	<select id="getDBSIdListByCmcId" parameterType="Long"		resultType="Long">		SELECT		sid		FROM		serviceflowattribute		WHERE cmcId	= #{cmcId}	</select>	<select id="getCmcQosPktClassInfo" parameterType="cmcQosPktClassInfo"		resultType="int">		select count(*)		from		qospktclass		where cmcId=#{cmcId} and		serviceFlowId=#{serviceFlowId} and		classId=#{classId}	</select>	<select id="getCmcQosParamSetInfo" parameterType="cmcQosParamSetInfo"		resultType="long">		select count(*)		from		serviceflowparamset		where		cmcId=#{cmcId}		and serviceFlowId=#{serviceFlowId} and		type=#{type}	</select>	<!-- ################################## select end ######################################### -->		<!-- ################################## insert start ####################################### -->	<insert id="insertServiceFlowPkgClassRelation" databaseId="MySQL"		parameterType="serviceFlowPkgClassRelation" useGeneratedKeys="true"		keyProperty="servicePacketId">		insert into		serviceflowpkgclassrelation(sId,cmcId,serviceFlowId,docsQosPktClassId)		values		(#{sId},#{cmcId},#{serviceFlowId},#{docsQosPktClassId})	</insert>	<insert id="insertCmcQosPktClassInfo" parameterType="cmcQosPktClassInfo">		insert into		qospktclass		(servicePacketId,cmcId, sId,		cmcIndex,		serviceFlowId,		classId,		classDirection,		classPriority,		classIpTosLow,		classIpTosHigh,		classIpTosMask,		classIpProtocol,		classIpSourceAddr,		classIpSourceMask,		classIpDestAddr,		classIpDestMask,		classSourcePortStart,		classSourcePortEnd,		classDestPortStart,		classDestPortEnd,		classDestMacAddr,		classDestMacMask,		classSourceMacAddr,		classEnetProtocolType,		classEnetProtocol,		classUserPriLow,		classUserPriHigh,		classVlanId,		classState,		classPkts,		classBitMap,		classInetSourceAddrType,		classInetSourceAddr,		classInetSourceMaskType,		classInetSourceMask,		classInetDestAddrType,		classInetDestAddr,		classInetDestMaskType,		classInetDestMask		)		values		(#{servicePacketId},#{cmcId}, #{sId},		#{cmcIndex}, #{serviceFlowId},		#{classId},		#{classDirection},		#{classPriority},		#{classIpTosLow},		#{classIpTosHigh},		#{classIpTosMask},		#{classIpProtocol},		#{classIpSourceAddr},		#{classIpSourceMask},		#{classIpDestAddr},		#{classIpDestMask},		#{classSourcePortStart},		#{classSourcePortEnd},		#{classDestPortStart},		#{classDestPortEnd},		#{classDestMacAddr},		#{classDestMacMask},		#{classSourceMacAddr},		#{classEnetProtocolType},		#{classEnetProtocol},		#{classUserPriLow},		#{classUserPriHigh},		#{classVlanId},		#{classState},		#{classPkts},		#{classBitMap},		#{classInetSourceAddrType},		#{classInetSourceAddr},		#{classInetSourceMaskType},		#{classInetSourceMask},		#{classInetDestAddrType},		#{classInetDestAddr},		#{classInetDestMaskType},		#{classInetDestMask}		)	</insert>	<insert id="insertServiceFlowPkgClassRelation" databaseId="Oracle"		parameterType="serviceFlowPkgClassRelation">		<selectKey keyProperty="servicePacketId" resultType="long"			order="BEFORE">			SELECT			serviceflowpkgclassrelation_Seq.nextval AS			servicePacketId from dual		</selectKey>		insert into		serviceflowpkgclassrelation(sId,cmcId,serviceFlowId,docsQosPktClassId)		values		(#{sId},#{cmcId},#{serviceFlowId},#{docsQosPktClassId})	</insert>	<insert id="insertServiceFlowParamSetRelation" databaseId="MySQL"		parameterType="serviceFlowParamSetRelation" useGeneratedKeys="true"		keyProperty="serviceParamId">		insert into		serviceflowparamsetrelation(sId,cmcId,serviceFlowId,docsQosParamSetType)		values		(#{sId},#{cmcId},#{serviceFlowId},#{docsQosParamSetType})	</insert>	<!-- ################################## insert end ######################################### -->		<!-- ################################## update start ####################################### -->	<update id="updateCmcQosPktClassInfo" parameterType="cmcQosPktClassInfo">		update		qospktclass set		cmcId=#{cmcId}, sId=#{sId},		cmcIndex=#{cmcIndex},		serviceFlowId=#{serviceFlowId},		classId=#{classId},		classDirection=#{classDirection},		classPriority=#{classPriority},		classIpTosLow=#{classIpTosLow},		classIpTosHigh=#{classIpTosHigh},		classIpTosMask=#{classIpTosMask},		classIpProtocol=#{classIpProtocol},		classIpSourceAddr=#{classIpSourceAddr},		classIpSourceMask=#{classIpSourceMask},		classIpDestAddr=#{classIpDestAddr},		classIpDestMask=#{classIpDestMask},		classSourcePortStart=#{classSourcePortEnd},		classSourcePortEnd=#{classSourcePortEnd},		classDestPortStart=#{classDestPortStart},		classDestPortEnd=#{classDestPortEnd},		classDestMacAddr=#{classDestMacAddr},		classDestMacMask=#{classDestMacMask},		classSourceMacAddr=#{classSourceMacAddr},		classEnetProtocolType=#{classEnetProtocolType},		classEnetProtocol=#{classEnetProtocol},		classUserPriLow=#{classUserPriLow},		classUserPriHigh=#{classUserPriHigh},		classVlanId=#{classVlanId},		classState=#{classState},		classPkts=#{classPkts},		classBitMap=#{classBitMap},		classInetSourceAddrType=#{classInetSourceAddrType},		classInetSourceAddr=#{classInetSourceAddr},		classInetSourceMaskType=#{classInetSourceMaskType},		classInetSourceMask=#{classInetSourceMask},		classInetDestAddrType=#{classInetDestAddrType},		classInetDestAddr=#{classInetDestAddr},		classInetDestMaskType=#{classInetDestMaskType},		classInetDestMask=#{classInetDestMask}		where		cmcId=#{cmcId} and		serviceFlowId=#{serviceFlowId} and		classId=#{classId}	</update>	<update id="updateCmcQosParamSetInfo" parameterType="cmcQosParamSetInfo">		update		serviceflowparamset set		cmcId=#{cmcId}, sId=#{sId},		cmcIndex=#{cmcIndex},		serviceFlowId=#{serviceFlowId},		type=#{type},		serviceClassName=#{serviceClassName},		priority=#{priority},		maxTrafficRate=#{maxTrafficRate},		maxTrafficBurst=#{maxTrafficBurst},		minReservedRate=#{minReservedRate},		minReservedPkt=#{minReservedPkt},		activeTimeout=#{activeTimeout},		admittedTimeout=#{admittedTimeout},		maxConcatBurst=#{maxConcatBurst},		schedulingType=#{schedulingType},		nomPollInterval=#{nomPollInterval},		tolPollJitter=#{tolPollJitter},		unsolicitGrantSize=#{unsolicitGrantSize},		nomGrantInterval=#{nomGrantInterval},		tolGrantJitter=#{tolGrantJitter},		grantsPerInterval=#{grantsPerInterval},		tosAndMask=#{tosAndMask},		tosOrMask=#{tosOrMask},		maxLatency=#{maxLatency},		requestPolicyOct=#{requestPolicyOct},		bitMap=#{bitMap}		where		serviceParamId=#{serviceParamId}	</update>	<!-- ################################## update end ######################################### -->		<!-- ################################## delete start ####################################### -->	<!-- ################################## delete end ######################################### -->		<select id="getQosDownDynamicServiceStatsInfo" parameterType="Long"        resultType="cmcQosDynamicServiceStats">        SELECT        cmcId,        cmcIndex,        docsQosIfDirection,        docsQosDsaReqs,        docsQosDsaRsps,        docsQosDsaAcks,        docsQosDscReqs,        docsQosDscRsps,        docsQosDscAcks,        docsQosDsdReqs,        docsQosDsdRsps,        docsQosDynamicAdds,        docsQosDynamicAddFails,        docsQosDynamicChanges,        docsQosDynamicChangeFails,        docsQosDynamicDeletes,        docsQosDynamicDeleteFails,        docsQosDccReqs,        docsQosDccRsps,        docsQosDccAcks,        docsQosDccs,        docsQosDccFails,        docsQosDccRspDeparts,        docsQosDccRspArrives,        collectTime        FROM        DynamicServiceFlowStats        WHERE cmcId        = #{cmcId} AND docsQosIfDirection=1    </select>    <select id="getQosUpDynamicServiceStatsInfo" parameterType="Long"        resultType="cmcQosDynamicServiceStats">        SELECT        cmcId,        cmcIndex,        docsQosIfDirection,        docsQosDsaReqs,        docsQosDsaRsps,        docsQosDsaAcks,        docsQosDscReqs,        docsQosDscRsps,        docsQosDscAcks,        docsQosDsdReqs,        docsQosDsdRsps,        docsQosDynamicAdds,        docsQosDynamicAddFails,        docsQosDynamicChanges,        docsQosDynamicChangeFails,        docsQosDynamicDeletes,        docsQosDynamicDeleteFails,        docsQosDccReqs,        docsQosDccRsps,        docsQosDccAcks,        docsQosDccs,        docsQosDccFails,        docsQosDccRspDeparts,        docsQosDccRspArrives,        collectTime        FROM        DynamicServiceFlowStats        WHERE cmcId        = #{cmcId} AND docsQosIfDirection=2    </select>    <select id="getQosParamSetInfo" parameterType="Long"        resultType="cmcQosParamSetInfo">        SELECT serviceParamId, cmcId, sId, cmcIndex,        serviceFlowId,        type,        serviceClassName,        priority,        maxTrafficRate,        maxTrafficBurst,        minReservedRate,        minReservedPkt,        activeTimeout,        admittedTimeout,        maxConcatBurst,        schedulingType,        nomPollInterval,        tolPollJitter,        unsolicitGrantSize,        nomGrantInterval,        tolGrantJitter,        grantsPerInterval,        tosAndMask,        tosOrMask,        maxLatency,        requestPolicyOct,        bitMap        FROM serviceflowparamset        WHERE sId = #{sId}    </select>    <select id="getQosPktClassInfo" parameterType="Long"        resultType="cmcQosPktClassInfo">        SELECT servicePacketId, cmcId, sId, cmcIndex,        serviceFlowId,        classId,        classDirection,        classPriority,        classIpTosLow,        classIpTosHigh,        classIpTosMask,        classIpProtocol,        classIpSourceAddr,        classIpSourceMask,        classIpDestAddr,        classIpDestMask,        classSourcePortStart,        classSourcePortEnd,        classDestPortStart,        classDestPortEnd,        classDestMacAddr,        classDestMacMask,        classSourceMacAddr,        classEnetProtocolType,        classEnetProtocol,        classUserPriApplies,        classUserPriLow,        classUserPriHigh,        classVlanId,        classState,        classPkts,        classBitMap,        classInetSourceAddrType,        classInetSourceAddr,        classInetSourceMaskType,        classInetSourceMask,        classInetDestAddrType,        classInetDestAddr,        classInetDestMaskType,        classInetDestMask        FROM        qospktclass        WHERE sId = #{sId}    </select>    <select id="getServiceFlowConnectedCm" parameterType="long"        resultType="cmAttribute">        SELECT        a.cmId,        cmcId,        statusIndex,        statusMacAddress,        statusIpAddress,        statusDownChannelIfIndex,        statusUpChannelIfIndex,        statusRxPower,        statusTimingOffset,        statusEqualizationData,        statusValue,        statusUnerroreds,        statusCorrecteds,        statusUncorrectables,        statusExtUnerroreds,        statusExtCorrecteds,        statusExtUncorrectables,        statusSignalNoise,        statusMicroreflections,        statusDocsisRegMode,        statusModulationType,        statusInetAddressType,        statusInetAddress,        statusValueLastUpdate,        statusHighResolutionTO        FROM cmattribute a right        join        serviceflowcmrelation b on a.cmId = b.cmId        WHERE sId=#{sId}    </select>    <select id="getCmcQosServiceFlowListInfo" parameterType="long"     resultType="cmcQosServiceFlowInfo">        SELECT        a.cmcId,        a.ifIndex,        a.serviceFlowId,        c.statusMacAddress,        a.docsQosServiceFlowSID,        a.docsQosServiceFlowDirection,        a.docsQosServiceFlowPrimary,        a.flowPkts,        a.flowOctets,        a.flowTimeCreated,        a.flowTimeActive,        a.flowPHSUnknowns,        a.flowPolicedDropPkts,        a.flowPolicedDelayPkts        FROM        ServiceFlowAttribute a right        join ServiceFlowCmRelation b on a.sId = b.sId        join cmAttribute c on        b.cmId=c.cmId        WHERE        a.cmcId = #{cmcId}        ORDER BY serviceFlowId    </select>    <select id="getCmcQosServiceFlowListNum" parameterType="Long"     resultType="Integer">        SELECT count(sId)        FROM ServiceFlowAttribute        WHERE        cmcId=#{cmcId}    </select>    <select id="getCmcQosServiceFlowListInfoWithCondition"        parameterType="map" resultType="cmcQosServiceFlowInfo">    SELECT    a.sId,    a.cmcId,    a.cmcIndex,    a.docsQosServiceFlowId,    a.docsQosServiceFlowSID,    a.docsQosServiceFlowDirection,    a.docsQosServiceFlowPrimary,    b.mac statusMacAddress,    c.flowPkts,    c.flowOctets,    c.flowTimeCreated,    c.flowTimeActive,    c.flowPHSUnknowns,    c.flowPolicedDropPkts    FROM    ServiceFlowAttribute a left join serviceflowcmrelation b on a.sId=b.sId    left join serviceflowstatus c on a.sId=c.sId    where 1=1    <if test="direction != null">        AND a.docsQosServiceFlowDirection                =                #{direction}    </if>    <if test="cmcId != null">        AND a.cmcId =                #{cmcId}    </if>    <if test="cmMac != null">        AND b.mac LIKE '${cmMac}%'    </if>    </select>    <select id="getUpQosServiceFlowStatsInfo" parameterType="map"        resultType="cmcQosServiceFlowStats">    SELECT count(sId) AS currentServiceFlowNum    FROM    serviceFlowstatus    WHERE cmcId =    #{cmcId} AND flowTimeCreated >    #{time}-flowTimeActive*1000    AND sid IN(    SELECT sId FROM    serviceFlowattribute    WHERE docsQosServiceFlowDirection = 2 )     </select>    <select id="getCmcQosServiceFlowListNumWithCondition"        parameterType="map" resultType="Integer">        SELECT count(a.sId)        FROM        ServiceFlowAttribute a left join serviceflowcmrelation b on a.sId=b.sId        WHERE 1=1        <if test="direction != null">            AND a.docsQosServiceFlowDirection                =                #{direction} 	    </if>	    <if test="cmcId != null">	        AND a.cmcId =                #{cmcId}	    </if>	    <if test="cmMac != null">	        AND b.mac LIKE '${cmMac}%'	    </if>    </select>    <select id="getDownQosServiceFlowStatsInfo" parameterType="map"        resultType="cmcQosServiceFlowStats">    SELECT count(sId) AS currentServiceFlowNum    FROM    serviceFlowstatus    WHERE    cmcId =    #{cmcId} AND flowTimeCreated *10 >    #{time}-flowTimeActive*1000    AND sid IN(    SELECT sId FROM    serviceFlowattribute    WHERE docsQosServiceFlowDirection = 1 )     </select>    <select id="getQosServiceClassList" parameterType="Long" resultType="cmcQosServiceClassInfo">        SELECT a.scId,a.entityId,a.className,a.classStatus,                a.classPriority,                a.classMaxTrafficRate,a.classMaxTrafficBurst,                a.classMinReservedRate,a.classMinReservedPkt,                a.classDirection,                count(distinct(b.sId)) totalParamSetNum        FROM serviceclass a left join ServiceFlowParamSet b on              a.className=b.serviceClassName        WHERE a.entityId=#{entityId}        GROUP BY a.scId,a.entityId,a.className,a.classStatus,                a.classPriority,                a.classMaxTrafficRate,a.classMaxTrafficBurst,                a.classMinReservedRate,a.classMinReservedPkt,                a.classDirection    </select>    <select id="getQosServiceClassInfo" parameterType="Long" resultType="cmcQosServiceClass">    SELECT  scId, className, classStatus,     classPriority,     classMaxTrafficRate,     classMaxTrafficBurst,     classMinReservedRate,     classMinReservedPkt,     classMaxConcatBurst,     classNomPollInterval,     classTolPollJitter,     classUnsolicitGrantSize,     classNomGrantInterval,     classTolGrantJitter,     classGrantsPerInterval,     classMaxLatency,     classActiveTimeout,     classAdmittedTimeout,     classSchedulingType,     classRequestPolicy,     classTosAndMask,     classTosOrMask,    classDirection       FROM serviceclass    WHERE scId=#{scId}    </select>    <select id="getEntityIdByCmcId" parameterType="long"        resultType="long">        <!-- select entityId from oltonurelation where onuId in (select        onuId from cmcentityrelation where cmcId=#{cmcId}) -->        select cmcEntityId from cmcentityrelation where cmcId = #{cmcId}    </select>    <select id="getCmcIdByOlt" parameterType="long" resultType="long">        select        A.cmcId        from        cmcentityrelation A,        oltonurelation B,        oltonuattribute C        where        B.entityId = #{entityId} AND B.onuId = C.onuId AND B.onuId = A.onuId    </select>    <select id="getDolSnmpParamByEntityId" parameterType="long"        resultType="dolSnmpParam">        SELECT entityId,        version, ip ipAddress, timeout, retry, port, mibs, community, writeCommunity,        username,        securityLevel, authProtocol, authPassword, privProtocol, privPassword,        authoritativeEngineID, contextName, contextId FROM dolsnmpparam        WHERE entityId = #{entityId}    </select>    <select id="getServiceClassNum" parameterType="cmcQosServiceClass" resultType="integer">    SELECT count(scId)    FROM serviceclass    WHERE entityId=#{entityId} AND className=#{className}    </select>    <select id="getCmcAttributeByCmcId" parameterType="long" resultType="cmcAttribute">        select        a.cmcId,a.cmcDeviceStyle,a.topCcmtsSysDescr,a.topCcmtsSysObjectId,a.topCcmtsSysUpTime,        a.topCcmtsSysContact,a.topCcmtsSysName,ifnull(a.nmname, a.topCcmtsSysName) nmName,a.topCcmtsSysLocation,a.topCcmtsSysService,        a.topCcmtsSysORLastChange,a.topCcmtsDocsisBaseCapability,a.topCcmtsSysRAMRatio,        a.topCcmtsSysCPURatio,a.topCcmtsSysMacAddrLong,a.topCcmtsSysFlashRatio,a.topCcmtsSysStatus,        a.topCcmtsSysSwVersion,a.dt        FROM        cmcattribute a         WHERE cmcId = #{cmcId}    </select>    <insert id="insertServiceClass" parameterType="cmcQosServiceClass">    INSERT INTO serviceclass    (scId, entityId, className, classStatus,     classPriority,     classMaxTrafficRate,     classMaxTrafficBurst,     classMinReservedRate,     classMinReservedPkt,     classMaxConcatBurst,     classNomPollInterval,     classTolPollJitter,     classUnsolicitGrantSize,     classNomGrantInterval,     classTolGrantJitter,     classGrantsPerInterval,     classMaxLatency,     classActiveTimeout,     classAdmittedTimeout,     classSchedulingType,     classRequestPolicy,     classTosAndMask,     classTosOrMask,     classDirection    )    values    (#{scId}, #{entityId}, #{className}, #{classStatus},     #{classPriority},     #{classMaxTrafficRate},     #{classMaxTrafficBurst},     #{classMinReservedRate},     #{classMinReservedPkt},     #{classMaxConcatBurst},     #{classNomPollInterval},     #{classTolPollJitter},     #{classUnsolicitGrantSize},     #{classNomGrantInterval},     #{classTolGrantJitter},     #{classGrantsPerInterval},     #{classMaxLatency},     #{classActiveTimeout},     #{classAdmittedTimeout},     #{classSchedulingType},     #{classRequestPolicy},     #{classTosAndMask},     #{classTosOrMask},    #{classDirection}    )    <selectKey resultType="long" keyProperty="scId">            SELECT @@IDENTITY            AS scId            </selectKey>    </insert>    <update id="updateServiceClass" parameterType="cmcQosServiceClass">    UPDATE serviceclass    SET      classStatus = #{classStatus},     classPriority = #{classPriority},     classMaxTrafficRate = #{classMaxTrafficRate},     classMaxTrafficBurst = #{classMaxTrafficBurst},     classMinReservedRate = #{classMinReservedRate},     classMinReservedPkt = #{classMinReservedPkt},     classMaxConcatBurst = #{classMaxConcatBurst},     classNomPollInterval = #{classNomPollInterval},     classTolPollJitter = #{classTolPollJitter},     classUnsolicitGrantSize = #{classUnsolicitGrantSize},     classNomGrantInterval = #{classNomGrantInterval},     classTolGrantJitter = #{classTolGrantJitter},     classGrantsPerInterval = #{classGrantsPerInterval},     classMaxLatency = #{classMaxLatency},     classActiveTimeout = #{classActiveTimeout},     classAdmittedTimeout = #{classAdmittedTimeout},     classSchedulingType = #{classSchedulingType},     classRequestPolicy = #{classRequestPolicy},     classTosAndMask = #{classTosAndMask},     classTosOrMask = #{classTosOrMask}    WHERE entityId = #{entityId} AND className = #{className}    </update>    <delete id="deleteServiceClass" parameterType="long">    DELETE    FROM serviceclass    WHERE scId=#{scId}    </delete>    <delete id="deleteServiceFlowParmsetRelationBySid"		parameterType="long">		delete from		serviceflowparamsetrelation		where		sId=#{sId}	</delete>	<insert id="insertCmcQosParamSetInfo" parameterType="cmcQosParamSetInfo">		insert into		serviceflowparamset		(serviceParamId, cmcId,		sId, cmcIndex,		serviceFlowId,		type,		serviceClassName,		priority,		maxTrafficRate,		maxTrafficBurst,		minReservedRate,		minReservedPkt,		activeTimeout,		admittedTimeout,		maxConcatBurst,		schedulingType,		nomPollInterval,		tolPollJitter,		unsolicitGrantSize,		nomGrantInterval,		tolGrantJitter,		grantsPerInterval,		tosAndMask,		tosOrMask,		maxLatency,		requestPolicyOct,		bitMap		)		values		(#{serviceParamId}, #{cmcId}, #{sId},		#{cmcIndex},		#{serviceFlowId},		#{type},		#{serviceClassName},		#{priority},		#{maxTrafficRate},		#{maxTrafficBurst},		#{minReservedRate},		#{minReservedPkt},		#{activeTimeout},		#{admittedTimeout},		#{maxConcatBurst},		#{schedulingType},		#{nomPollInterval},		#{tolPollJitter},		#{unsolicitGrantSize},		#{nomGrantInterval},		#{tolGrantJitter},		#{grantsPerInterval},		#{tosAndMask},		#{tosOrMask},		#{maxLatency},		#{requestPolicyOct},		#{bitMap}		)	</insert>	<insert id="insertServiceFlowParamSetRelation" databaseId="Oracle"		parameterType="serviceFlowParamSetRelation">		<selectKey keyProperty="serviceParamId" resultType="long"			order="BEFORE">			SELECT			serviceflowparamsetrelation_Seq.nextval AS serviceParamId			from dual		</selectKey>		insert into		serviceflowparamsetrelation(sId,cmcId,serviceFlowId,docsQosParamSetType)		values		(#{sId},#{cmcId},#{serviceFlowId},#{docsQosParamSetType})	</insert>	<select id="getSIdByCmcIdAndServiceFlowId" parameterType="map"		resultType="long">		select sId from		cmcserviceflowrelation where cmcId=#{cmcId}		and		serviceFlowId=#{serviceFlowId}	</select>	<update id="updateCmcQosServiceFlowAttribute" parameterType="cmcQosServiceFlowAttribute">		update		serviceflowattribute set		cmcIndex=#{cmcIndex}, cmcId=#{cmcId},		docsQosServiceFlowId=#{docsQosServiceFlowId},		docsQosServiceFlowSID=#{docsQosServiceFlowSID},		docsQosServiceFlowDirection=#{docsQosServiceFlowDirection},		docsQosServiceFlowPrimary=#{docsQosServiceFlowPrimary}		where		cmcId=#{cmcId} and		docsQosServiceFlowId=#{docsQosServiceFlowId}	</update>	<insert id="insertCmcServiceFlowRelation" databaseId="MySQL"		parameterType="cmcServiceFlowRelation" useGeneratedKeys="true"		keyProperty="sId">		insert into cmcserviceflowrelation(cmcId,serviceFlowId)		values		(#{cmcId},#{serviceFlowId})	</insert>	<insert id="insertCmcServiceFlowRelation" databaseId="Oracle"		parameterType="cmcServiceFlowRelation">		<selectKey keyProperty="sId" resultType="long" order="BEFORE">			SELECT			cmcserviceflowrelation_Seq.nextval AS sId			from dual		</selectKey>		insert into cmcserviceflowrelation(cmcId,serviceFlowId) values		(#{cmcId},#{serviceFlowId})	</insert>	<insert id="insertCmcQosServiceFlowAttribute" parameterType="cmcQosServiceFlowAttribute">		insert into serviceflowattribute		(sId,cmcIndex,		cmcId,		docsQosServiceFlowId,		docsQosServiceFlowSID,		docsQosServiceFlowDirection,		docsQosServiceFlowPrimary		)		values		(#{sId},		#{cmcIndex}, #{cmcId}, #{docsQosServiceFlowId},		#{docsQosServiceFlowSID},		#{docsQosServiceFlowDirection},		#{docsQosServiceFlowPrimary}		)	</insert>	<delete id="deleteCmcQosServiceFlowRelationBySid" parameterType="long">		delete from		cmcserviceflowrelation where		sId=#{sId}	</delete>	<select id="getCmcQosServiceFlowStatus" parameterType="cmcQosServiceFlowStatus"		resultType="int">		select count(*)		from		serviceflowstatus		where		cmcId=#{cmcId} and		flowId=#{flowId}	</select>	<update id="updateCmcQosServiceFlowStatus" parameterType="cmcQosServiceFlowStatus">		update		serviceflowstatus set		sId=#{sId},		cmcIndex=#{cmcIndex},		cmcId=#{cmcId},		flowId=#{flowId},		flowPkts=#{flowPkts},		flowOctets=#{flowOctets},		flowTimeCreated=#{flowTimeCreated},		flowTimeActive=#{flowTimeActive},		flowPHSUnknowns=#{flowPHSUnknowns},		flowPolicedDropPkts=#{flowPolicedDropPkts},		flowPolicedDelayPkts=#{flowPolicedDelayPkts}		where		sId=#{sId}	</update>	<insert id="insertCmcQosServiceFlowStatus" parameterType="cmcQosServiceFlowStatus">		insert		into serviceflowstatus		(sId,cmcIndex, cmcId,		flowId, flowPkts,		flowOctets,		flowTimeCreated,		flowTimeActive,		flowPHSUnknowns,		flowPolicedDropPkts,		flowPolicedDelayPkts		)		values		(#{sId}, #{cmcIndex},		#{cmcId}, #{flowId},		#{flowPkts},		#{flowOctets},		#{flowTimeCreated},		#{flowTimeActive},		#{flowPHSUnknowns},		#{flowPolicedDropPkts},		#{flowPolicedDelayPkts}		)	</insert>	<select id="getCmMacToServiceFlow" parameterType="cmMacToServiceFlow"		resultType="long">		select count(*) from		serviceflowcmrelation		where sId=#{sId}	</select>	<update id="updateCmMacToServiceFlow" parameterType="cmMacToServiceFlow">		update		serviceflowcmrelation set		sId=#{sId},		cmId=#{cmId},		mac=#{docsQosCmtsCmMac}, serviceFlowId=#{docsQosCmtsServiceFlowId},		cmcIndex=#{docsQosCmtsIfIndex}		where		sId=#{sId}	</update>	<insert id="insertCmMacToServiceFlow" parameterType="cmMacToServiceFlow">		insert into		serviceflowcmrelation		(sId, mac, cmId,		serviceFlowId, cmcIndex)		values		(#{sId}, #{docsQosCmtsCmMac}, #{cmId}, #{docsQosCmtsServiceFlowId},		#{docsQosCmtsIfIndex}		)	</insert>	<delete id="deleteCmcQosServiceFlowRelation" parameterType="long">		delete from		cmcserviceflowrelation where		cmcid=#{cmcId}	</delete>		<select id="getCmcIdByCmcIndexAndEntityId" parameterType="map"		resultType="long">		select cmcId from cmcentityrelation		where cmcIndex =		#{cmcIndex} and cmcEntityId=#{entityId}	</select>	<select id="getCmIdByCmMac" parameterType="cmCmcRelation"		resultType="long">		select cmId from cmccmrelation where		entityId=#{entityId}		and maclong=#{maclong}	</select>	<delete id="deleteServiceFlowParmsetRelationByCmcId"		parameterType="long">		delete from		serviceflowparamsetrelation		where		cmcId=#{cmcId}	</delete></mapper>